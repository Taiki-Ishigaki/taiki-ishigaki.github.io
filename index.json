[{"authors":["admin"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"","tags":null,"title":"Taiki Ishigaki","type":"authors"},{"authors":null,"categories":["ros","robotics"],"content":"初めてのROS rosがインストール完了しているとして\nワークスペースの作成と設定  任意の名前のワークスペース(例~/catkin_ws)ディレクトリとその中にsrcディレクトリを作成する\nmkdir ~/catkin_ws/src catkinワークスペースとして初期化\ncd ~/catkin_ws/src catkin_init_workspace ワークスペースのビルド\nワークスペース直下にbuildディレクトリとdevelディレクトリが生成\ncd ~/catkin_ws catkin_make 環境変数の設定\n環境変数「$ROS_PACKAGE_PATH」に自分のワークスペースを追加する\nワークスペースを変更したときに毎回行う必要あり\nsource ~/catkin_ws/devel/setup.bash ワークスペースの環境変数を自動で読み込むようにする 新たにターミナルを起動しても自動で環境変数を読み込むように\necho \u0026#34;source ~/catkin_ws/devel/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc  catkin 参考ページ\nRViz シミュレータではない，ROSでシミュレータを使いたいならGazebo\nrosrun rviz rviz で起動する，「/opt/ros/kinematic/bin」にパスが通っているなら以下のコマンドで省略可能\nrviz tf ブロードキャスタとリスナ tfはリスナの問い合わせに対してブロードキャストによって得られる情報から2フレーム間の相対位置を求める\n ブロードキャスト 異なる2フレーム間の相対位置を配信 リスナ 異なる2フレーム間の相対位置を取得  ブロードキャスト コード StaticTransformBroadcasterとTransformBroadcasterに2種類がある\nツール rosrun tf2ros static_transform_publisher x y z yaw pitch roll frame_id child_frame_id もしくは\nrosrun tf2ros static_transform_publisher x y z qx qy qz qw frame_id child_frame_id rostopic トピックの確認\nrostopic list トピックの内容確認\nrostopic echo \u0026lt;topic_name\u0026gt; トピックが送信されてるか確認\nrostopic hz \u0026lt;topic_name\u0026gt; rqt Robot Steering rqt Plugins-\u0026gt;Robot Tools-\u0026gt;Robot Steering トピック名を変更\nrqt_image_view imageトピックを確認する\nrqt_image_view joy ジョイコントローラ用のパッケージ\njoy用のパッケージのインストール sudo apt-get install ros-kinetic-joy sudo apt-get install ros-kinetic-joystick-drivers 実行 rosrun joy joy_node","date":1576454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576454400,"objectID":"210d9c79eed14fa2afc590d5a4634232","permalink":"/post/tips/robotics/ros/ros-tips/","publishdate":"2019-12-16T00:00:00Z","relpermalink":"/post/tips/robotics/ros/ros-tips/","section":"post","summary":"初めてのROS rosがインストール完了しているとして\nワークスペースの作成と設定  任意の名前のワークスペース(例~/catkin_ws)ディレクトリとその中にsrcディレクトリを作成する\nmkdir ~/catkin_ws/src catkinワークスペースとして初期化\ncd ~/catkin_ws/src catkin_init_workspace ワークスペースのビルド\nワークスペース直下にbuildディレクトリとdevelディレクトリが生成\ncd ~/catkin_ws catkin_make 環境変数の設定\n環境変数「$ROS_PACKAGE_PATH」に自分のワークスペースを追加する\nワークスペースを変更したときに毎回行う必要あり\nsource ~/catkin_ws/devel/setup.bash ワークスペースの環境変数を自動で読み込むようにする 新たにターミナルを起動しても自動で環境変数を読み込むように\necho \u0026#34;source ~/catkin_ws/devel/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc  catkin 参考ページ\nRViz シミュレータではない，ROSでシミュレータを使いたいならGazebo\nrosrun rviz rviz で起動する，「/opt/ros/kinematic/bin」にパスが通っているなら以下のコマンドで省略可能\nrviz tf ブロードキャスタとリスナ tfはリスナの問い合わせに対してブロードキャストによって得られる情報から2フレーム間の相対位置を求める\n ブロードキャスト 異なる2フレーム間の相対位置を配信 リスナ 異なる2フレーム間の相対位置を取得  ブロードキャスト コード StaticTransformBroadcasterとTransformBroadcasterに2種類がある\nツール rosrun tf2ros static_transform_publisher x y z yaw pitch roll frame_id child_frame_id もしくは\nrosrun tf2ros static_transform_publisher x y z qx qy qz qw frame_id child_frame_id rostopic トピックの確認","tags":[],"title":"Use of ROS","type":"post"},{"authors":null,"categories":["docker","tips"],"content":"docker command Dockerイメージをダウンロード docker image pull repository:tag Dockerイメージを別名で保存 docker image tag repository:tag new_repository:new_tag DockerHubにpush  DockerHubアカウント作成\n DockerHubにログイン\ndocker login アカウントの確認\ndocker info プッシュ\ndocker push repogitory repogitoryの名前はDockerHubのユーザ名から始まるもの\n  ","date":1576195200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576195200,"objectID":"e87c3e024ce9eb8439ca4b2d58c50513","permalink":"/post/tips/docker/docker_tips/","publishdate":"2019-12-13T00:00:00Z","relpermalink":"/post/tips/docker/docker_tips/","section":"post","summary":"docker command Dockerイメージをダウンロード docker image pull repository:tag Dockerイメージを別名で保存 docker image tag repository:tag new_repository:new_tag DockerHubにpush  DockerHubアカウント作成\n DockerHubにログイン\ndocker login アカウントの確認\ndocker info プッシュ\ndocker push repogitory repogitoryの名前はDockerHubのユーザ名から始まるもの\n  ","tags":[],"title":"Docker Tips","type":"post"},{"authors":null,"categories":["tips"],"content":"hugo install 最新のhugoをインストールする（バージョンが古いとacademic-kickstarが使えない\n以下のURLより https://github.com/gohugoio/hugo/releases\n以下のようにダウンロード(20191203)\nwget https://github.com/gohugoio/hugo/releases/download/v0.60.1/hugo_0.60.1_Linux-64bit.deb 以下のコマンドでインストール\nsudo apt install ./hugo_0.60.1_Linux-64bit.debhugo version でバージョンを確認することができる\nhugo 基本操作 ビルド hugo 記事をローカルブラウザで確認 hugo server hugo server オプション ファイルの変更を検知して自動検知\nhugo server -w ドラフト記事も生成\nhugo server -D 未来の記事を生成\nhugo server -F academic-kickstar Setting  Academic KickstarレポジトリをForkする 自身のForkしたリポジトリから以下のようにclone (sorcethemesを自身のGithubユーザー名に変更)\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website テーマの初期化\ncd My_Website git submodule update --init --recursive ビルド 今回の場合ならMy_Websiteディレクトリで以下を実行しビルド\nhugo  reference  https://sourcethemes.com/academic/docs/  ","date":1575331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575331200,"objectID":"5a6c63fc0b0023ac0722e049b2a242e1","permalink":"/post/tips/hugo/hugo-academic/","publishdate":"2019-12-03T00:00:00Z","relpermalink":"/post/tips/hugo/hugo-academic/","section":"post","summary":"hugo install 最新のhugoをインストールする（バージョンが古いとacademic-kickstarが使えない\n以下のURLより https://github.com/gohugoio/hugo/releases\n以下のようにダウンロード(20191203)\nwget https://github.com/gohugoio/hugo/releases/download/v0.60.1/hugo_0.60.1_Linux-64bit.deb 以下のコマンドでインストール\nsudo apt install ./hugo_0.60.1_Linux-64bit.debhugo version でバージョンを確認することができる\nhugo 基本操作 ビルド hugo 記事をローカルブラウザで確認 hugo server hugo server オプション ファイルの変更を検知して自動検知\nhugo server -w ドラフト記事も生成\nhugo server -D 未来の記事を生成\nhugo server -F academic-kickstar Setting  Academic KickstarレポジトリをForkする 自身のForkしたリポジトリから以下のようにclone (sorcethemesを自身のGithubユーザー名に変更)\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website テーマの初期化\ncd My_Website git submodule update --init --recursive ビルド 今回の場合ならMy_Websiteディレクトリで以下を実行しビルド\nhugo  reference  https://sourcethemes.com/academic/docs/  ","tags":["hugo-academic"],"title":"Using Hugo-Academic","type":"post"},{"authors":null,"categories":["humanoid"],"content":"線形倒立振子 \\[ \\ddot{x_G} = \\omega^2 x_G \\tag{1} \\]\n$x_G$は重心位置として，重力加速度を$g$，重心の高さ$z$で一定として$\\omega^2 = \\frac{g}{z}$とする.\n軌道エネルギー 式(1)の両辺に右から$x_G$をかけて\n\\[ \\ddot{x_G}\\dot{x_G} = \\omega^2 x_G \\dot{x_G} \\\\ \\frac{d}{dt} (\\frac{1}{2} {\\dot{x_G}}^2) = \\omega^2 \\frac{d}{dt}( \\frac{1}{2} {x_G}^2 ) \\\\ \\frac{d}{dt}(\\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} {x_G}^2 ) = 0 \\\\ \\]\n以下のように軌道エネルギー$E$を定義すると\n\\[ E = \\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} {x_G}^2 \\tag{2} \\]\n軌道エネルギーの時間変化は\n\\[ \\frac{d}{dt} E = 0 \\]\n以上のようになるので，一定であることが分かる．\n軌道エネルギーを用いた計算 任意の重心位置，速度で目標速度$v_d$に制御するための着地点$x_z$を求める．ここで着地点$x_z$上で重心速度が$v_d$になるように計算する．\nエネルギーが一定であることから\n\\[ \\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} (x_z - x_G)^2 = \\frac{1}{2} {\\dot{v_d}}^2 - \\omega^2 \\frac{1}{2} (x_z - x_z)^2 \\\\ {\\dot{x_G}}^2 - \\omega^2 (x_z - x_G)^2 = {\\dot{v_d}}^2 \\\\ \\]\n\\[ x_z = x_G + \\frac{\\sqrt{{\\dot{x_G}}^2 - {v_d}^2}}{\\omega} \\tag{3} \\]\nここで$v_d = 0$とすると以下のようになりcapture pointに一致する\n\\[ x_z = x_G + \\frac{\\dot{x_G}}{\\omega} \\tag{4} \\]\n軌道エネルギーの正負から重心がポテンシャルを超えられるか判定することが可能\n参考文献  S.Kajita 2005 \u0026quot;ヒューマノイドロボット\u0026quot; オーム社  ","date":1572220800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572220800,"objectID":"6713b7211ce07d8dbb69e5a5cc07b21b","permalink":"/post/documents/humanoid/orbit_energy/","publishdate":"2019-10-28T00:00:00Z","relpermalink":"/post/documents/humanoid/orbit_energy/","section":"post","summary":"線形倒立振子 \\[ \\ddot{x_G} = \\omega^2 x_G \\tag{1} \\]\n$x_G$は重心位置として，重力加速度を$g$，重心の高さ$z$で一定として$\\omega^2 = \\frac{g}{z}$とする.\n軌道エネルギー 式(1)の両辺に右から$x_G$をかけて\n\\[ \\ddot{x_G}\\dot{x_G} = \\omega^2 x_G \\dot{x_G} \\\\ \\frac{d}{dt} (\\frac{1}{2} {\\dot{x_G}}^2) = \\omega^2 \\frac{d}{dt}( \\frac{1}{2} {x_G}^2 ) \\\\ \\frac{d}{dt}(\\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} {x_G}^2 ) = 0 \\\\ \\]\n以下のように軌道エネルギー$E$を定義すると\n\\[ E = \\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} {x_G}^2 \\tag{2} \\]\n軌道エネルギーの時間変化は\n\\[ \\frac{d}{dt} E = 0 \\]\n以上のようになるので，一定であることが分かる．\n軌道エネルギーを用いた計算 任意の重心位置，速度で目標速度$v_d$に制御するための着地点$x_z$を求める．ここで着地点$x_z$上で重心速度が$v_d$になるように計算する．\nエネルギーが一定であることから\n\\[ \\frac{1}{2} {\\dot{x_G}}^2 - \\omega^2 \\frac{1}{2} (x_z - x_G)^2 = \\frac{1}{2} {\\dot{v_d}}^2 - \\omega^2 \\frac{1}{2} (x_z - x_z)^2 \\\\ {\\dot{x_G}}^2 - \\omega^2 (x_z - x_G)^2 = {\\dot{v_d}}^2 \\\\ \\]","tags":[],"title":"軌道エネルギー","type":"post"},{"authors":null,"categories":["math"],"content":"実数行列:$A \\in \\mathbb{R}^{m \\times n}$の特異値分解が以下のように与えられる．\n\\[ A = USV^T = \\left[ \\begin{array}{rr} U_1 \u0026 U_2 \\end{array} \\right] \\left[ \\begin{array}{rr} \\Sigma_{r \\times r} \u0026 O_{r \\times (n-r)} \\\\ O_{(m-r) \\times r} \u0026 O_{(m-r) \\times (n-r)} \\end{array} \\right] \\left[ \\begin{array}{rr} {V_1}^T \\\\ {V_2}^T \\end{array} \\right] \\]\n\\[ \\Sigma = \\rm{diag}(\\sigma_1, ... \\sigma_r) \\]\nここでrank$(A) = r$、$U \\in \\mathbb{R}^{m \\times m}$，$V \\in \\mathbb{R}^{n \\times n}$は直交行列，$\\sigma_i (i = 1, ... r)$は$A$の特異値\n擬似逆行列は\n\\[ A^{\\sharp} = \\left[ \\begin{array}{rr} U_1 \u0026 U_2 \\end{array} \\right] \\left[ \\begin{array}{rr} \\Sigma_{r \\times r}^{-1} \u0026 O_{r \\times (n-r)} \\\\ O_{(m-r) \\times r} \u0026 O_{(m-r) \\times (n-r)} \\end{array} \\right] \\left[ \\begin{array}{rr} {V_1}^T \\\\ {V_2}^T \\end{array} \\right] \\]\n$U$，$V$は直交行列なので\n\\[ U^T U = U U^T = E_m , V^T V = V V^T = E_n \\]\nそこで\n\\[ V^T V = \\left[ \\begin{array}{rr} V_1^T \\\\ V_2^T \\end{array} \\right] \\left[ \\begin{array}{rr} V_1 \u0026 V_2 \\end{array} \\right] = \\left[ \\begin{array}{rr} V_1^T V_1 \u0026 V_1^T V_2 \\\\ V_2^T V_1 \u0026 V_2^T V_2 \\end{array} \\right] = E_n \\]\n\\[ V V^T = \\left[ \\begin{array}{rr} V_1 \u0026 V_2 \\end{array} \\right] \\left[ \\begin{array}{rr} V_1^T \\\\ V_2^T \\end{array} \\right] = V_1 V_1^T + V_2 V_2^T = E_n \\]\nであるので\n\\[ V_1^T V_1 = E_r, V_2^T V_2 = E_{(n - r)}, V_1^T V_2 = V_2^T V_1 = O \\]\nここで$V_1$，$V_2$は必ずしも正方行列ではなく$V_1 V_1^T$，$V_2 V_2^T$が単位行列ではない($A$が列フルランクなら$V = V_1$で正方行列)\n","date":1571270400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571270400,"objectID":"c48b873a9f74cd6251883fdda2086767","permalink":"/post/documents/math/singular_value_decomposition/","publishdate":"2019-10-17T00:00:00Z","relpermalink":"/post/documents/math/singular_value_decomposition/","section":"post","summary":"実数行列:$A \\in \\mathbb{R}^{m \\times n}$の特異値分解が以下のように与えられる．\n\\[ A = USV^T = \\left[ \\begin{array}{rr} U_1 \u0026 U_2 \\end{array} \\right] \\left[ \\begin{array}{rr} \\Sigma_{r \\times r} \u0026 O_{r \\times (n-r)} \\\\ O_{(m-r) \\times r} \u0026 O_{(m-r) \\times (n-r)} \\end{array} \\right] \\left[ \\begin{array}{rr} {V_1}^T \\\\ {V_2}^T \\end{array} \\right] \\]\n\\[ \\Sigma = \\rm{diag}(\\sigma_1, ... \\sigma_r) \\]\nここでrank$(A) = r$、$U \\in \\mathbb{R}^{m \\times m}$，$V \\in \\mathbb{R}^{n \\times n}$は直交行列，$\\sigma_i (i = 1, ... r)$は$A$の特異値\n擬似逆行列は\n\\[ A^{\\sharp} = \\left[ \\begin{array}{rr} U_1 \u0026 U_2 \\end{array} \\right] \\left[ \\begin{array}{rr} \\Sigma_{r \\times r}^{-1} \u0026 O_{r \\times (n-r)} \\\\ O_{(m-r) \\times r} \u0026 O_{(m-r) \\times (n-r)} \\end{array} \\right] \\left[ \\begin{array}{rr} {V_1}^T \\\\ {V_2}^T \\end{array} \\right] \\]","tags":[],"title":"特異値分解","type":"post"},{"authors":null,"categories":["robotics"],"content":"準備 順運動学と微分順運動学 $x \\in \\mathbb{R}^{m}$ と リンク系の状態を示す一般化座標$q \\in \\mathbb{R}^{n}$\n順運動学\n\\[ x = f(q) \\tag{1} \\]\n微分順運動学\n\\[ \\dot{x} = J(q) \\dot{q} \\tag{2} \\]\nここで$J(q) = \\frac{\\partial f}{\\partial q} \\in \\mathbb{R}^{m \\times n}$\n微分逆運動学 $m \u0026lt; n$で冗長な時，式(1)の一般解，微分逆運動学の式は\n\\[ \\dot{q} = J^{\\sharp} \\dot{x} + N y \\tag{3} \\]\nここで$J^{\\sharp}$は$J$の擬似逆行列で$N$は任意のベクトルを$J(\\theta)$のヌルスペースに写像する行列で$y$は任意のベクトル．\n優先度付き微分逆運動学 制御を行なう上で実現させたい量(手先の位置や速度，角運動量など)をタスクと呼ぶ．この時，そのタスクは式(1)のように一般化座標で表すことができるためタスクを実現するために一般化座標について解きロボットを制御する．\nここでそのタスクが優先度を持って与えられたとする．タスク$x_i (i = 1, ... n)$，ここでタスクのインデックスが小さいほど優先順位が高いとする．\n高い優先度のタスクを式(3)の微分逆運動学で実現し，$J_i$のヌルスペースでより低い優先度のタスクを実現する．[1]\n\\[ \\dot{x_i} = J_i \\dot{q} \\]\n\\[ \\dot{q} = {J_i}^{\\sharp} \\dot{x_i} + N_i y \\tag{4} \\]\n\\[ \\dot{x_{i+1}} = J_{i+1} \\dot{q} \\tag{5} \\]\n式(4)，(5)を同時に満たす，$y$を求める．(5)式に(4)式を代入すると\n\\[ \\dot{x_{i+1}} = J_{i+1} {J_i}^{\\sharp} \\dot{x_i} + J_{i+1} N_i y \\]\n\\[ y = (J_{i+1} N_i )^{\\sharp} (\\dot{x_{i+1}} - J_{i+1} {J_i}^{\\sharp} \\dot{x_i}) + N_{i+1} z \\]\nここで優先度順で解いた時に，漸化式によって分解でき以下のような一般解となる．[2]\n\\[ \\rm{for} \\ i = i \\ \\rm{to} \\ N \\]\n\\[ \\dot{q_i} = \\dot{q_{i-1}} + (J_i N_{i-1})^{\\sharp} (\\dot{x_i} - J_i \\dot{q_{i-1}}) \\]\n\\[ N_i = N_{i-1} - (J_i N_{i_1})^{\\sharp}(J_i N_{i_1}) \\]\nReference [1]: Y.Nakamura, et al. (1987) \u0026quot;Task-Priority Based Redundancy Control of Robot Manipulators\u0026quot;\n[2]: B.Siciliano, J-J E. Slotine (1991) \u0026quot;A General Framework for Managing Multiple Tasks in Highly Redundant Robotic Systems\u0026quot;\n","date":1570579200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570579200,"objectID":"617239925b88dda3746a211972d04183","permalink":"/post/documents/robotics/task_priority/","publishdate":"2019-10-09T00:00:00Z","relpermalink":"/post/documents/robotics/task_priority/","section":"post","summary":"準備 順運動学と微分順運動学 $x \\in \\mathbb{R}^{m}$ と リンク系の状態を示す一般化座標$q \\in \\mathbb{R}^{n}$\n順運動学\n\\[ x = f(q) \\tag{1} \\]\n微分順運動学\n\\[ \\dot{x} = J(q) \\dot{q} \\tag{2} \\]\nここで$J(q) = \\frac{\\partial f}{\\partial q} \\in \\mathbb{R}^{m \\times n}$\n微分逆運動学 $m \u0026lt; n$で冗長な時，式(1)の一般解，微分逆運動学の式は\n\\[ \\dot{q} = J^{\\sharp} \\dot{x} + N y \\tag{3} \\]\nここで$J^{\\sharp}$は$J$の擬似逆行列で$N$は任意のベクトルを$J(\\theta)$のヌルスペースに写像する行列で$y$は任意のベクトル．\n優先度付き微分逆運動学 制御を行なう上で実現させたい量(手先の位置や速度，角運動量など)をタスクと呼ぶ．この時，そのタスクは式(1)のように一般化座標で表すことができるためタスクを実現するために一般化座標について解きロボットを制御する．\nここでそのタスクが優先度を持って与えられたとする．タスク$x_i (i = 1, ... n)$，ここでタスクのインデックスが小さいほど優先順位が高いとする．\n高い優先度のタスクを式(3)の微分逆運動学で実現し，$J_i$のヌルスペースでより低い優先度のタスクを実現する．[1]\n\\[ \\dot{x_i} = J_i \\dot{q} \\]\n\\[ \\dot{q} = {J_i}^{\\sharp} \\dot{x_i} + N_i y \\tag{4} \\]","tags":[],"title":"優先度付き微分逆運動学","type":"post"},{"authors":null,"categories":["humanoid"],"content":"倒立振子の運動 地面にfree jointとして接続された長さ$h$の棒に質点(重さ:$m$)倒立振子を考える(簡単のため同一平面上を動く時を考える). 振子の傾きを$\\theta$として，倒立振子の運動方程式は，\n\\[ (m h^2)\\ddot{\\theta} = mg \\sin\\theta \\ h \\]\n$ 0 \\simeq \\theta $のとき，$\\sin\\theta \\simeq \\theta$とすることができるので\n\\[ \\ddot{\\theta} = \\omega^2 \\sin\\theta \\quad \\omega := \\sqrt{\\frac{g}{h}}\\tag{1} \\]\n重心位置$x_G$として，$x_G = h \\sin\\theta \\simeq h\\theta$なので(1)式は\n\\[ \\ddot{x_G} = \\omega x_G \\tag{2} \\]\n状態変数$x = [x_G \\dot{x_G}]^T$として状態方程式は\n\\[ \\dot{x} = \\left[ \\begin{array}{rr} \\dot{x_G} \\\\ \\ddot{x_G} \\\\ \\end{array} \\right] = \\left[ \\begin{array}{rr} 0 \u0026 1 \\\\ \\omega^2 \u0026 0 \\\\ \\end{array} \\right] \\left[ \\begin{array}{rr} x_G \\\\ \\dot{x_G} \\\\ \\end{array} \\right] = Ax \\tag{3} \\]\n状態遷移行列$A$の固有値，固有ベクトルを求めシステムの性質を調べる\n\\[ det(\\lambda E - A ) = 0 \\\\ \\left| \\begin{array}{rr} \\lambda \u0026 -1 \\\\ -\\omega^2 \u0026 \\lambda \\\\ \\end{array} \\right| = \\lambda^2 - \\omega^2 = (\\lambda - \\omega) (\\lambda + \\omega) = 0 \\\\ \\lambda = \\omega, -\\omega \\]\n固有値は$\\lambda = \\omega, -\\omega$で固有ベクトルは\n$\\lambda = -\\omega \u0026lt; 0$ のとき $a_1 = [1, -\\omega]^T$\n$\\lambda = \\omega \u0026gt; 0$ のとき $a_2 = [1, \\omega]^T$\n","date":1569715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569715200,"objectID":"2c994562bbf60dcd0bf5c89d6b593c00","permalink":"/post/documents/humanoid/lipm/","publishdate":"2019-09-29T00:00:00Z","relpermalink":"/post/documents/humanoid/lipm/","section":"post","summary":"倒立振子の運動 地面にfree jointとして接続された長さ$h$の棒に質点(重さ:$m$)倒立振子を考える(簡単のため同一平面上を動く時を考える). 振子の傾きを$\\theta$として，倒立振子の運動方程式は，\n\\[ (m h^2)\\ddot{\\theta} = mg \\sin\\theta \\ h \\]\n$ 0 \\simeq \\theta $のとき，$\\sin\\theta \\simeq \\theta$とすることができるので\n\\[ \\ddot{\\theta} = \\omega^2 \\sin\\theta \\quad \\omega := \\sqrt{\\frac{g}{h}}\\tag{1} \\]\n重心位置$x_G$として，$x_G = h \\sin\\theta \\simeq h\\theta$なので(1)式は\n\\[ \\ddot{x_G} = \\omega x_G \\tag{2} \\]\n状態変数$x = [x_G \\dot{x_G}]^T$として状態方程式は\n\\[ \\dot{x} = \\left[ \\begin{array}{rr} \\dot{x_G} \\\\ \\ddot{x_G} \\\\ \\end{array} \\right] = \\left[ \\begin{array}{rr} 0 \u0026 1 \\\\ \\omega^2 \u0026 0 \\\\ \\end{array} \\right] \\left[ \\begin{array}{rr} x_G \\\\ \\dot{x_G} \\\\ \\end{array} \\right] = Ax \\tag{3} \\]","tags":[],"title":"線形倒立振子","type":"post"},{"authors":null,"categories":["robotics"],"content":"剛体の運動方程式 \\[ m_i \\ddot{p_{G_i}} = \\hat{f_i} + \\sum_j f_{i, j} - m_i g \\tag{1} \\]\n\\[ \\dot{L_i} = \\hat{\\tau_i} + \\sum_j \\tau_{i, j} \\tag{2} \\]\n $m_i$ : 剛体の質量\n $p_{G_i}$ : 剛体の重心位置\n $L_i$ : 剛体の重心まわりの角運動量\n $\\hat{f_i}$ : 剛体に働く外力 $\\hat{\\tau_i}$ : 剛体に働く重心まわりのモーメント $f_{i, j}$ : 剛体間に働く力 $\\tau_{i, j}$ : 剛体間に働くモーメント  多体系の重心の運動方程式 剛体$l_i$($i = 1, ... n$)からなる多体系の重心に関する運動方程式を導出する.\nまず, 重心$ p_G $を定義する.\n\\[ p_G = \\frac{1}{m} \\sum_i m_i p_{G_i} \\tag{3} \\]\nここで$m$は剛体の全質量である.\n重心の運動量は\n\\[ H_G = m \\dot{p_G} \\tag{4} \\]\n重心に関する運動方程式は運動量の時間変化から(1),(4)式より以下のように求まる\n\\[ \\dot{H_G} = m \\ddot{p_G} = \\sum_i m_i \\ddot{p_{G_i}} = \\sum_i (\\hat{f_i} + \\sum_j f_{i,j} - m_i g) = \\sum_i \\hat{f_i} - m g \\]\n\\[ m \\ddot{p_G} = \\sum_i \\hat{f_i} - m g \\tag{5} \\]\n多体系の重心周りの角運動量に関する運動方程式 多体系の重心周りの角運動量に関する運動方程式を導出する.\n重心周りの角運動量は\n\\[ L_G = \\sum_i (L_i + (p_{G_i} - p_G) \\times m_i \\dot{p_i}) \\tag{6} \\]\n重心周りの角運動量に関する運動方程式は角運動量の時間変化から(2), (6)式より以下のように求まる\n\\[ \\dot{L_G} = \\sum_i (\\dot{L_i} + (\\dot{p_{G_i}} - \\dot{p_G}) \\times m_i \\dot{p_i} + (p_{G_i} - p_G) \\times m_i \\ddot{p_i}) = \\sum_i(\\hat{\\tau_i} + (p_{G_i} - p_G) \\times \\hat{f_i}) \\]\n\\[ \\dot{L_G} = \\sum_i(\\hat{\\tau_i} + (p_{G_i} - p_G) \\times \\hat{f_i}) \\tag{7} \\]\n接触レンチ(contact wrench) 並進力成分とモーメント成分を合わせた6次元ベクトル\n\\[ \\left[ \\begin{array}{rr} f_c \\\\ \\tau_c \\\\ \\end{array} \\right] = \\left[ \\begin{array}{rr} \\sum_i \\hat{f_i} \\\\ \\sum_i(\\hat{\\tau_i} + p_{G_i} \\times \\hat{f_i}\\\\ \\end{array} \\right] \\]\n重心の運動方程式 \\[ \\begin{cases} m \\ddot{p_G} = f_c - mg \\\\ \\dot{L} = \\tau_c - p_G \\times f_c \\end{cases} \\]\nAppendix 作用・反作用の法則 \\[ f_{i, j} = - f_{j, i} \\]\n\\[ \\tau_{i, j} + p_i \\times f_{i, j} = - (\\tau_{j, i} + p_j \\times f_{j_i}) \\]\n","date":1569110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569110400,"objectID":"9cc2f76c0eda48593a4237452e643bd5","permalink":"/post/documents/robotics/centroidal_dynamics/","publishdate":"2019-09-22T00:00:00Z","relpermalink":"/post/documents/robotics/centroidal_dynamics/","section":"post","summary":"剛体の運動方程式 \\[ m_i \\ddot{p_{G_i}} = \\hat{f_i} + \\sum_j f_{i, j} - m_i g \\tag{1} \\]\n\\[ \\dot{L_i} = \\hat{\\tau_i} + \\sum_j \\tau_{i, j} \\tag{2} \\]\n $m_i$ : 剛体の質量\n $p_{G_i}$ : 剛体の重心位置\n $L_i$ : 剛体の重心まわりの角運動量\n $\\hat{f_i}$ : 剛体に働く外力 $\\hat{\\tau_i}$ : 剛体に働く重心まわりのモーメント $f_{i, j}$ : 剛体間に働く力 $\\tau_{i, j}$ : 剛体間に働くモーメント  多体系の重心の運動方程式 剛体$l_i$($i = 1, ... n$)からなる多体系の重心に関する運動方程式を導出する.\nまず, 重心$ p_G $を定義する.\n\\[ p_G = \\frac{1}{m} \\sum_i m_i p_{G_i} \\tag{3} \\]","tags":[],"title":"重心動力学","type":"post"},{"authors":null,"categories":["tips","ESP32","Electronic Kits"],"content":"Setup Aruduino IDE https://www.arduino.cc/en/Main/Software\nfor use ESP32 on ArduinoIDE\n [Arduino-ESP32]:https://github.com/espressif/arduino-esp32/blob/master/docs/arduino-ide/boards_manager.md copy of Stable release link paste : ツールバー\u0026gt;ファイル\u0026gt;環境設定\u0026gt;追加のボードマネージャーのURL ボードマネージャー :ツール\u0026gt;ボード\u0026gt;ボードマネージャー then search ESP32 install : esp32 by Espressifl Systems  Download ドライバ https://jp.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers\nAbout Board On board LED is GPIO2 https://github.com/espressif/arduino-esp32 https://leico.github.io/TechnicalNote/Arduino/esp32-pinmap\nUse Sample Program ファイル\u0026gt;スケッチ例\nReference  https://qiita.com/WK_ZAKK/items/d7fbbb8c0c8eebe5682d   ","date":1568937600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1568937600,"objectID":"d1784c358fc917659725e83991638d68","permalink":"/post/tips/esp32/esp32_setup/","publishdate":"2019-09-20T00:00:00Z","relpermalink":"/post/tips/esp32/esp32_setup/","section":"post","summary":"Setup Aruduino IDE https://www.arduino.cc/en/Main/Software\nfor use ESP32 on ArduinoIDE\n [Arduino-ESP32]:https://github.com/espressif/arduino-esp32/blob/master/docs/arduino-ide/boards_manager.md copy of Stable release link paste : ツールバー\u0026gt;ファイル\u0026gt;環境設定\u0026gt;追加のボードマネージャーのURL ボードマネージャー :ツール\u0026gt;ボード\u0026gt;ボードマネージャー then search ESP32 install : esp32 by Espressifl Systems  Download ドライバ https://jp.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers\nAbout Board On board LED is GPIO2 https://github.com/espressif/arduino-esp32 https://leico.github.io/TechnicalNote/Arduino/esp32-pinmap\nUse Sample Program ファイル\u0026gt;スケッチ例\nReference  https://qiita.com/WK_ZAKK/items/d7fbbb8c0c8eebe5682d   ","tags":["ESP32","Electronic Kits"],"title":"Setup for ESP32","type":"post"},{"authors":null,"categories":["tips","ESP32","Electronic Kits"],"content":"Pin Assintment about SSD1306:SPI,128x64\n GND\n VCC : 3.3v (or 5v)\n D0 : CLK\n D1 : MOSI\n RES : GPIO\n DC : GPIO\n CS : GPIO\n  Install Library  スケッチ\u0026gt;ライブラリをインクルード\u0026gt;ライブラリを管理... search and install : Adafruit SSD1306 by Adafruit search and install : Adafruit GFX Library  Modify Library To match your device, select display size in Adafruit_SSD.h at Arduino/libraries/Adafruit_SSD1306\nchange form\n#define SSD1306_64_48// #define SSD1306_128_64 // #define SSD1306_128_32 // #define SSD1306_96_16 to\n// #define SSD1306_64_48  #define SSD1306_128_64// #define SSD1306_128_32 // #define SSD1306_96_16 Use Sample Program at ファイル\u0026gt;スケッチ例\u0026gt;Adafruit SSD1306 Wemos Mini OLED\u0026gt; ssd 1306_128x64_spi\nModify sample program about Pin define\nReference  https://circuitdigest.com/microcontroller-projects/esp32-internet-clock https://mobile.k05.biz/e/2018/12/ssd1306-128x64-spi.html https://jumbleat.com/2017/03/16/amazon_cheap_oled_2/  ","date":1568937600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1568937600,"objectID":"ee8a28ab17fefcee1f7f1fc656ff5543","permalink":"/post/tips/esp32/oled/","publishdate":"2019-09-20T00:00:00Z","relpermalink":"/post/tips/esp32/oled/","section":"post","summary":"Pin Assintment about SSD1306:SPI,128x64\n GND\n VCC : 3.3v (or 5v)\n D0 : CLK\n D1 : MOSI\n RES : GPIO\n DC : GPIO\n CS : GPIO\n  Install Library  スケッチ\u0026gt;ライブラリをインクルード\u0026gt;ライブラリを管理... search and install : Adafruit SSD1306 by Adafruit search and install : Adafruit GFX Library  Modify Library To match your device, select display size in Adafruit_SSD.h at Arduino/libraries/Adafruit_SSD1306\nchange form\n#define SSD1306_64_48// #define SSD1306_128_64 // #define SSD1306_128_32 // #define SSD1306_96_16 to","tags":["ESP32","Electronic Kits"],"title":"Using OLED(SSD1306:SPI,128x64) by ESP32","type":"post"},{"authors":["Ko Yamamoto","Taiki Ishigaki","Yoshihiko Nakamura"],"categories":null,"content":"","date":1567728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567728000,"objectID":"b72109b75a821ed5227ab27ac1e3520c","permalink":"/publication/conference-paper/rsj2019/","publishdate":"2019-09-06T00:00:00Z","relpermalink":"/publication/conference-paper/rsj2019/","section":"publication","summary":"","tags":null,"title":"ヒューマノイドの動力学を考慮した全身コンプライアンス最適化によるバランス制御の実験検証","type":"publication"}]